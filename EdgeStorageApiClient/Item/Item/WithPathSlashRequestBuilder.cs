// <auto-generated/>
#pragma warning disable CS0618
using EdgeStorageApiClient.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace EdgeStorageApiClient.Item.Item
{
    /// <summary>
    /// Builds and executes requests for operations under \{storageZoneName}\{+path}\
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WithPathSlashRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::EdgeStorageApiClient.Item.Item.WithPathSlashRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="path">The directory path that you want to list.</param>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithPathSlashRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter, string path = "") : base(requestAdapter, "{+baseurl}/{storageZoneName}/{+path}/", pathParameters)
        {
            if (!string.IsNullOrWhiteSpace(path)) PathParameters.Add("path", path);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::EdgeStorageApiClient.Item.Item.WithPathSlashRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithPathSlashRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/{storageZoneName}/{+path}/", rawUrl)
        {
        }
        /// <summary>
        /// [ListFiles API Docs](https://docs.bunny.net/reference/get_-storagezonename-path-)
        /// </summary>
        /// <returns>A List&lt;global::EdgeStorageApiClient.Models.FileObject&gt;</returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<List<global::EdgeStorageApiClient.Models.FileObject>?> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<List<global::EdgeStorageApiClient.Models.FileObject>> GetAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var collectionResult = await RequestAdapter.SendCollectionAsync<global::EdgeStorageApiClient.Models.FileObject>(requestInfo, global::EdgeStorageApiClient.Models.FileObject.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
            return collectionResult?.AsList();
        }
        /// <summary>
        /// [ListFiles API Docs](https://docs.bunny.net/reference/get_-storagezonename-path-)
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::EdgeStorageApiClient.Item.Item.WithPathSlashRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::EdgeStorageApiClient.Item.Item.WithPathSlashRequestBuilder WithUrl(string rawUrl)
        {
            return new global::EdgeStorageApiClient.Item.Item.WithPathSlashRequestBuilder(rawUrl, RequestAdapter);
        }
    }
}
#pragma warning restore CS0618
