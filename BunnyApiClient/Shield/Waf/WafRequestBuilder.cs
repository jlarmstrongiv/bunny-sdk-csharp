// <auto-generated/>
#pragma warning disable CS0618
using BunnyApiClient.Shield.Waf.CustomRule;
using BunnyApiClient.Shield.Waf.CustomRules;
using BunnyApiClient.Shield.Waf.EngineConfig;
using BunnyApiClient.Shield.Waf.Enums;
using BunnyApiClient.Shield.Waf.Profiles;
using BunnyApiClient.Shield.Waf.Rules;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace BunnyApiClient.Shield.Waf
{
    /// <summary>
    /// Builds and executes requests for operations under \shield\waf
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WafRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The customRule property</summary>
        public global::BunnyApiClient.Shield.Waf.CustomRule.CustomRuleRequestBuilder CustomRule
        {
            get => new global::BunnyApiClient.Shield.Waf.CustomRule.CustomRuleRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The customRules property</summary>
        public global::BunnyApiClient.Shield.Waf.CustomRules.CustomRulesRequestBuilder CustomRules
        {
            get => new global::BunnyApiClient.Shield.Waf.CustomRules.CustomRulesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The engineConfig property</summary>
        public global::BunnyApiClient.Shield.Waf.EngineConfig.EngineConfigRequestBuilder EngineConfig
        {
            get => new global::BunnyApiClient.Shield.Waf.EngineConfig.EngineConfigRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The enums property</summary>
        public global::BunnyApiClient.Shield.Waf.Enums.EnumsRequestBuilder Enums
        {
            get => new global::BunnyApiClient.Shield.Waf.Enums.EnumsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The profiles property</summary>
        public global::BunnyApiClient.Shield.Waf.Profiles.ProfilesRequestBuilder Profiles
        {
            get => new global::BunnyApiClient.Shield.Waf.Profiles.ProfilesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The rules property</summary>
        public global::BunnyApiClient.Shield.Waf.Rules.RulesRequestBuilder Rules
        {
            get => new global::BunnyApiClient.Shield.Waf.Rules.RulesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::BunnyApiClient.Shield.Waf.WafRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WafRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/shield/waf", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::BunnyApiClient.Shield.Waf.WafRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WafRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/shield/waf", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
